<?php
/**
 * Implementation of hook_menu.
 */
function open_users_menu() {
	  //绑定过程的Email输入页面
  $items['open_users/email'] = array(
    'title' => t('please input an email for your registration or bind an exists email'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('open_users_email'),
    'access callback' => '_open_users_mail_access',
    'type' => MENU_CALLBACK
  );
	//TODO menu tab
	$items['admin/config/system/open_users/synch'] = array(
    'title' => 'Open users synch setting',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('open_users_synch_setting'),
    'access arguments' => array('administer site configuration'),
    'file' => 'open_users.pages.inc',
    //'type' => MENU_NORMAL_ITEM  
  );
  return $items;  
}
function _open_users_mail_access(){
	return (user_is_anonymous() && isset($_SESSION['temp_open_user']))?TRUE:FALSE;
}
/**
 * The user just logged out.
 *
 * @param $account
 *   The user object on which the operation was just performed.
 */
function open_users_user_logout($account) {
   if(isset($_SESSION['temp_open_user']))
	 unset($_SESSION['temp_open_user']);
}

/**
 * @Implement of hook_user_delete()
 * see user_delete_multiple()
 */
function open_users_user_delete($account) {
  db_delete('open_users')
    ->condition('uid', $account->uid)
    ->execute();
}
/*
 * 获取用户绑定信息 即users_open表内容
 * return obj
 * 
function  open_users_user_config($account=null,$open_type='weibo'){
  if(!$account){    
    global $user;
    $account = $user;
  }
  $result = db_query("SELECT * FROM {open_users} WHERE uid = '%s' AND open_type = '%s'",$account->uid, $open_type);
  if ($result = db_fetch_object($result)) {
    return $result;
  }
  return FALSE;
}*/


/*
 * 处理整个过程的入口，供其他模块调用
 * $ouser array 传入的外部应用返回的user信息
 * 例如：
 * $ouser = Array
		(
		    [open_uid] => 1801497981
		    [open_name] => Bluesky_still
		    [open_token] => 2.00DvtuxB28Fd1C6154dce17cwsqDUE
		    [open_type] => weibo
		    [open_picture] => http://tp2.sinaimg.cn/1801497981/50/5642512686/1.jpg
		    [open_signature] => 天空依然蔚蓝！
		    [open_location] => Array
		        (
		            [city] => 8
		            [province] => 11
		            [location] => 北京 海淀区
		            [blog] => http://blog.sina.com.cn/dale302
		        )
		
		)
 * $jump 是否跳转回首页，默认为true，即跳转回首页
 */
function open_users_bandapi($open_user,$jump=true){
	$temp_user_uid = open_users_is_banded($open_user);
  if(!$temp_user_uid){
    global $user;
    if($user->uid > 0){
      open_users_band($user->uid,$open_user);//open_band
      /*user_external_login_register($account->name,'open_users'); */
			$module = 'open_users';
			user_set_authmaps($user, array("authname_$module" => $user->name));
			drupal_goto('user/'.$user->uid);
    }else{
      //未登录状态  
      // TO DO: 弹出新窗口，让用户输入Email地址
      $_SESSION['temp_open_user'] = $open_user;
      drupal_set_message('您还没有注册，微薄登录不可用，【永不止息】目前只接受熟人邀请注册，您可以填写邮箱来申请排队内测～');
      drupal_goto('open_users/email');      
    }
  }else{
    // TO DO: Login and update token if bound.
    open_users_refresh_token($temp_user_uid,$open_user);
		$account=user_load($temp_user_uid);
		/*user_external_login_register($account->name,'open_users'); */
		$module = 'open_users';
		user_set_authmaps($account, array("authname_$module" => $account->name));
		// Log user in.
		$form_state['uid'] = $account->uid;
    if($account->status) {
      user_login_submit(array(), $form_state); 
    }else{
      drupal_set_message(t('对不起，您的帐户已经被登记，还没有熟人邀请，暂时不能通过微博登陆！'), 'status', FALSE);
    }
  
    if($jump){
      drupal_goto(); // jump to <front>
    }
  }
}
/**
 * replace new token when oauther2.0
 */
function open_users_refresh_token($uid,$open_user){
	$query_parameters = array(
		':open_token' =>serialize($open_user['open_token']),
		':uid' =>$uid,
		':open_type' =>$open_user['open_type'],
	);
  db_query("update {open_users} set open_token = :open_token where uid=:uid and open_type=:open_type",$query_parameters);
}
/*
 * 
 * return 1 已经注册
 *      0 尚未注册
 */
function open_users_get_uid_by_mail($mail){
  // TO DO: get uid by email
  $user_info = array('mail'=>$mail);
  $user = user_load($user_info);
  if($user->uid > 0){
    $uid = $user->uid; 
  }else{
    $uid = 0;
  }
  return $user->uid;  
}

/*
 * build name for user
 * 如果用户name已经存在，则在后面加上_1,_2以此类推
 */
function open_users_new_name($name){
  $new_name = $name;
  //"'.strtolower($new_name).'%"
  if(($i=db_query('SELECT count(*) FROM {users} WHERE `name`  LIKE :name',array(':name'=>strtolower($new_name).'%'))->fetchField())>0){
    $new_name .='_'.$i; 
  }
  return $new_name;
}
/**
 * @see user_external_login_register($name, $module)
 */
function open_users_register($open_user,$module='open_users'){
  // TO DO: reg new user by function user_save()
  $name = open_users_new_name($open_user['open_name']);
  $pass = user_password();
  $account = user_external_load($name);
  if (!$account) {
    // Register this new user.
		$user_info = array(
	    'name' => $name,
	    'pass'=>$pass, 
	    'mail'=>$open_user['open_mail'],
	    'status'=>0,//love custom not let user form weibo reg
	    'init'=>$open_user['open_mail'],
	    'picture'=>$open_user['open_picture'],
	    'signature'=>$open_user['open_signature'],
	    'access' => REQUEST_TIME
	  );
    $account = user_save(drupal_anonymous_user(), $user_info);
    // Terminate if an error occurred during user_save().
    if (!$account) {
      drupal_set_message(t("Error saving user account."), 'error');
      return;
    }
  	user_set_authmaps($account, array("authname_$module" => $name));
		//hide info for love custom
		// drupal_set_message('已为你成功创建帐号，随机密码：'.$pass.'，如果你需要从本站直接登录，请记住此密码或'.l('立即修改', 'user/'.$account->uid.'/edit'));
    if($open_user['open_name'] <> $user_info['name']){
        //hide info for love custom
        // drupal_set_message('您的用户名 '.$open_user['open_name'].' 已经被注册，您可以使用新的用户名 '.$user_info['name'].' ，您也可以'.l('修改用户名', 'user/'.$account->uid.'/edit'));
 		} 
    return $account;   
  }
 
}

 /**
 * Check whether the user is already bound.
 *
 * @param $open_user
 *   An array Contains be binding user information.
 * @return
 *   If bound return $uid or FALSE.
 */
function open_users_is_banded($open_user){
	$query_parameters = array(
		':open_uid' =>$open_user['open_uid'],
		':open_type' =>$open_user['open_type']		
	);
  $uid = db_query("select uid from {open_users} where open_uid = :open_uid AND open_type = :open_type",$query_parameters)->fetchField();
	return $uid?$uid:FALSE;
}

/**
 * Form builder; email.
 *
 * @ingroup forms
 * @see open_users_email_form_validate
 * @see open_users_email_form_submit
 */
function open_users_email(){
	$open_user = $_SESSION['temp_open_user'];
  $form['user_band_login_email'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail address'),
    '#description' => t('A valid e-mail address. All e-mails from the system will be sent to this address. The e-mail address is not made public and will only be used if you wish to receive a new password or wish to receive certain news or notifications by e-mail.'),
    '#required' => TRUE
  );
	 // Add the buttons.
  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    //'#access' => variable_get('node_preview_' . $node->type, DRUPAL_OPTIONAL) != DRUPAL_REQUIRED || (!form_get_errors() && isset($form_state['node_preview'])),
    '#value' => t('Save'),
    '#weight' => 5,
    //'#submit' => array('node_form_submit'),
  );
  
  return $form;
}
/**
 * Form validation handler for the open_users_email() form.
 */
function open_users_email_validate($form, &$form_state) {
  $form_state['values']['user_band_login_email'] = trim($form_state['values']['user_band_login_email']);
  $email = $form_state['values']['user_band_login_email'];
	//TODO if email has registed
	//The e-mail address xiangkeguo@gmail.com is already registered.
	// Trim whitespace from mail, to prevent confusing 'e-mail not valid'
  // warnings often caused by cutting and pasting.
  $mail = trim($form_state['values']['user_band_login_email']);
  //form_set_value($form['account']['mail'], $mail, $form_state);
  // Validate the e-mail address, and check if it is taken by an existing user.

  if ($error = user_validate_mail($form_state['values']['user_band_login_email'])) {
    form_set_error('user_band_login_email', $error);
  }
  elseif ((bool) db_select('users')->fields('users', array('uid'))->condition('mail', $mail)->execute()->fetchField()) {
    // Format error message dependent on whether the user is logged in or not.
    if ($GLOBALS['user']->uid) {
      form_set_error('user_band_login_email', t('The e-mail address %email is already taken.', array('%email' => $form_state['values']['user_band_login_email'])));
    }
    else {
      form_set_error('user_band_login_email', t('The e-mail address %email is already registered. <a href="@password">Have you forgotten your password?</a>', array('%email' => $form_state['values']['user_band_login_email'], '@password' => url('user/password'))));
    }
  }
}
/**
 * Form submit handler for the open_users_email() form.
 */
function open_users_email_submit($form, &$form_state){
	$mail = trim($form_state['values']['user_band_login_email']);
	$ac = user_load_by_mail($mail);
	$uid = 0;
	if($ac) {
		$uid = $ac->uid;
	}
	$open_user = $_SESSION['temp_open_user'];
	if( $uid == 0){ //$open_user中的Email尚未注册
		$open_user['open_mail'] = $mail;dpm($open_user,'$open_user1');
		$user = open_users_register($open_user);
		$uid = $user->uid;
	}
	open_users_band($uid,$open_user);
	// do someting after band.
	$account = user_load($uid);
	$module = 'open_users';
	user_set_authmaps($account, array("authname_$module" => $account->name));
  //love custom not let login.

	/*/ Log user in.
	$form_state['uid'] = $account->uid;
	user_login_submit(array(), $form_state); 
	
	unset($_SESSION['temp_open_user']);
	drupal_goto('user/'.$account->uid.'/edit');
  */
  drupal_set_message(t('您的请求信息已登记，请耐心等待审核及注册邀请函！'), 'status', FALSE);
  drupal_goto();
}
/*
 * 处理绑定过程
 * $uid 当前登录用户的uid
 * $open_user 获取到的外部应用的用户信息
 */
function open_users_band($uid,$open_user){
  $open_uid =  $open_user['open_uid'];
  unset($open_user['open_uid']);
  $open_name =  $open_user['open_name'];
  unset($open_user['open_name']);
  $open_type =  $open_user['open_type'];
  unset($open_user['open_type']);
  $open_token = $open_user['open_token'];
  unset($open_user['open_token']);
  unset($open_user['open_mail']);
	if(isset($open_user['open_picture'])){
		$open_picture = $open_user['open_picture'];
  	unset($open_user['open_picture']);
	}else{$open_picture='';}
	$query_parameters = array(
		':uid'=>$uid,
		':open_uid'=>$open_uid,
		':open_name'=>$open_name,
		':open_picture'=>$open_picture,
		':open_type'=>$open_type,
		':open_token'=>serialize($open_token),
		':open_config'=>serialize($open_user)
	);
	db_query("INSERT INTO {open_users} (uid, open_uid, open_name, open_picture, open_type, open_token, open_config) VALUES (:uid,:open_uid,:open_name,:open_picture,:open_type,:open_token,:open_config)",$query_parameters);
  drupal_set_message(t('Binding @open_type user @open_name successfully.',array('@open_type'=>$open_type,'@open_name'=>$open_name)),'status');
}

/**
 *  hook_node_type_insert
 */
function open_users_node_type_insert($info) {
  drupal_set_message(t('You have just created a content type with a machine name %type.</br>open users module setting:<a href="@url">set synch types</a>', array('%type' => $info->type,'@url' => url('admin/config/open_users/synch'))));
	//form_set_error('user_band_login_email', t('The e-mail address %email is already registered. <a href="@password">Have you forgotten your password?</a>', array('%email' => $form_state['values']['user_band_login_email'], '@password' => url('user/password'))));
}
function open_users_node_type_delete($info) {
	$synch_types = variable_get('synch_types',NULL);
	$synch_types = array_filter(unserialize($synch_types));
	if($synch_types["$info->type"])unset($synch_types["$info->type"]);
	$synch_types = serialize($synch_types);
	variable_set('synch_types',$synch_types);
}
/**
 * Implementation of hook_form_alter
 * //TODO 判断存在的第三方模块，设置是否同步
 */
function open_users_form_alter00(&$form, $form_state, $form_id) {
	if($form_id=='open_users_synch_setting'){
		
	}
	$modules = array('open_weibo');
	//isset($form['#node']->nid) //not the edit node form.
	if(isset($form['#node']) && !isset($form['#node']->nid) 
	&& $form['#node']->type .'_node_form' == $form_id){
		//启用模块，并设置同步
		foreach($modules as $module){
			if(module_exists($module)&&variable_get($module.'_enabled')){
				$form[$module] = array(
		      '#type' => 'fieldset',
		      '#title' => '同步到新浪微博',
		      '#collapsible' => true,
		      '#collapsed' => true,
		      '#tree' => true
		    );
		    $form[$module]['check'] = array(
		      '#type' => 'radios',
		      '#title' => '发送',
		      '#required' => true,
		      '#default_value' => 0,
		      '#options' => array('否', '是'),
		    );
			}
		}
		
	};
	

  //TODO commets setting
  global $user;
  $sina_open = false;
  
  if ('comment_form' == $form_id) {
    if (variable_get('sina_open_comment', 1)) {
      if ($user->uid > 0) { 
        $sina_open = true;
      } else {
        
        if (variable_get('comment_form_location_'. $node->type, COMMENT_FORM_SEPARATE_PAGE) == COMMENT_FORM_SEPARATE_PAGE) {
          $destination = 'redirect='. rawurlencode('comment/reply/'.$form['nid']['#value']);
        } else {
          $destination = 'redirect='. rawurlencode('node/'.$form['nid']['#value']);
        }
        
        $form['sina_open_links'] = array(
          '#value' => theme('item_list', array(array(
            'data' => l('使用新浪微博登录', 'sina_open/t_login', array('query' => $destination)),
            'class' => 'sina_open_login_links'
          ))),
          '#weight' => -2,
        );
      }
    }
  }else if (isset($form['#node']) && $form['#node']->type .'_node_form' == $form_id
  && variable_get('sina_open_node_'.$form['#node']->type, 1) && !isset($form['#node']->nid)) {
    $sina_open = true;
  }
  
  return $form;
}